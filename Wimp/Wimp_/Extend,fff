Wimp_Extend (&400FB) [3.50]
#Parent Wimp_
=>	R0 =	reason code
	 	0-5	Internal use only
# From extreme hacking:
# 1: return window manager workspace pointer
# 2: return some sort of branch table
#     0 plot text in desktop font
#     4 SWI dispatch code
#     8 SWI exit code
#    12 page in different task?
#    16 plot icon??
#    20 a return instruction
#    24 perform wimp_spriteop
# 3: give/return pointer of routine to be called instead of SWI handler code
# 4: return two pointers inside WM workspace
# 5: give/return pointer of routine to be called to fill in window background
	 	6	<Parent window=>.6789A>
	 	7	<Top child window=>.6789A>
	 	8	<Bottom child window=>.6789A>
	 	9	<Sibling immediately below=>.6789A>
	 	10	<Sibling immediately above=>.6789A>
	 	11	<Window information=>.11>
	 	13	<Sprite suffix=>.13>

Note that unrecognised reason codes do not generate an error, but simply return with all registers preserved.
#subpage 6789A
Wimp_Extend 6-10
=>	R0 =	6	= return parent window handle
 	 	7	= top child window
 	 	8	= bottom child window
 	 	9	= sibling immediately below
 	 	10	= sibling immediately above
	R1 =	window queried, or -1 for top level
<=	R1 =	next window handle, or -1 for none

Returns information about the window stack.

A returned -1 means 'no window', or R1 was -1 on entry and R0 was not 7 or 8. Pane windows are not skipped.
#
#subpage 11
Wimp_Extend 11
=>	R0 =	11 (reason code)
	R1 =	pointer to 100-byte <block=>.preblock>
		 	
<=	R0 preserved
	R1 preserved and <updated=>.postblock>

All measurements are in OS units.
#
#subpage preblock
Wimp_Extend 11, R1 block on entry
Offset	Meaning
#line
0	Window handle, or 0 to return generic values for a window with line borders enabled

On exit, the block is <updated=>.postblock>
#
#subpage postblock
Wimp_Extend 11, R1 block on exit
Offset	Contents
#line
0	Window handle (preserved)
4	Left border width (1 pixel, or 0 if absent)
8	Bottom border width (horizontal scroll height, or 1 pixel border, or 0 if absent)
12	Right border width (vertical scroll width, or 1 pixel border, or 0 if absent)
16	Top border width (title bar height, or 1 pixel border, or 0 if absent)
20	Back width,				0 if absent
24	Close width,				0 if absent
28	Reserved
32	Title width,				0 if absent (corrupt if no window handle was given on entry)
36	Reserved
40	Iconise width,				0 if absent (ie. no close, or configured off, or a child window)
44	Toggle-size width,			0 if absent
48	Toggle-size height,			0 if absent
52	Vertical scrollbar upper-gap,		0 if no vertical scrollbar
56	Up-arrow height, possibly squashed, 	0 if no vertical scrollbar
60	Vertical scroll well height,		0 if no vertical scrollbar (corrupt if no window handle was given on entry)
64	Down-arrow height, possibly squashed,	0 if no vertical scrollbar
68	Vertical scrollbar lower-gap,		0 if no vertical scrollbar
72	Adjust-size or blank height,		0 if neither
76	Adjust-size or blank width,		0 if neither
80	Horizontal scrollbar right-gap,		0 if no horizontal scrollbar
84	Right-arrow width, possibly squashed,	0 if no horizontal scrollbar
88	Horizontal scroll well width,		0 if no horizontal scrollbar (corrupt if no window handle was given on entry)
92	Left-arrow width, possibly squashed,	0 if no horizontal scrollbar
96	Horizontal scrollbar left-gap,		0 if no horizontal scrollbar
#
#subpage 13
Wimp_Extend 13 (&400FB) [5.00]
=>	R0 =	13 (reason code)
	R1 = 	pointer to filename without suffix
	R2 =	pointer to output buffer
	R3 =	size of buffer, or 0 to read size required

<=	R0 corrupt
	R3 =	space left in buffer, or -required size.

This call adds a sprite file suffix onto a pathname. It uses a multi-pass strategy so that it will fall back where a particular file is not available.

Old Wimps do not support this call, but don't return an error. In this case, all registers will be preserved and you should use <Wimp_ReadSysInfo> 2 instead.