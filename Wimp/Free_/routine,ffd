Free routine entry
#Parent Free_Register
{f25}ﬁ{f}	R0 =	0 (NoOp)
	 	1 (<GetFSName=>.1>)
	 	2 (<GetFreeSpace=>.2>)
	 	3 (<CompareDevice=>.3>)
	 	4 (<GetFreeSpace64=>.4>)
	others dependant on R0
#line
The routine will be called in User mode with a stack consisting /only/ of the return address (no other use should be made of it). The routine can either:
è	construct a new stack.
è	use the SVC stack by calling <OS=>OS:OS_EnterOS>, remembering to return to User mode before returning.
è	do all the hard work with a SWI (PRM suggests <OS_FSControl 49=>OS:OS_FSControl49> for reason 2, but this still alters registers that must be preserved somewhere...)

The routine should exit using:
# note: PRM 2:513 says 
#      LDMIA R13,{PC}
# but this is corrected in PRM 5a:665
è	{fCode}LDMIA R13!,\{PC}{f}
#line;tab
See also:	<PRM 2-512=>PRM-2:512>, <5a-257=>PRM-5a:257>, <5a-665=>PRM-5a:665>
#
#Subpage 1
Free GetFSName (1)
{f25}ﬁ{f}	R0 =	1 (GetFSName)
	R1 =	<FS number=>OS:fsys_ident>
	R2 =	pointer to buffer
	R3 =	pointer to device or ID
{f25}‹{f}	R0 =	length of name
	R1-R3 preserved
#line
You should place the device name at R2 and the length of the name in R0.
#line;tab
See also:	<PRM 2-513=>PRM-2:513>, < 5a-258=>PRM-5a:258>
#
#Subpage 2
Free GetFreeSpace (2)
{f25}ﬁ{f}	R0 =	2 (GetFreeSpace)
	R1 =	<FS number=>OS:fsys_ident>
	R2 =	pointer to 3 word buffer
	R3 =	pointer to device or ID
{f25}‹{f}	R0-R3 preserved, R2 buffer :
	 	0 = total size of device (or 0 if unchanged)
	 	4 = free space on device
	 	8 = used space on device
#line
This is used to find the free space on a device, which should be written to the buffer. On RISC OS 3.6 or later, <reason code 4=>.4> is used in preference to this, but this should also be supported.
#line;tab
See also:	<PRM 2-514=>PRM-2:514>, <5a-258=>PRM-5a:258>
#
#Subpage 3
Free CompareDevice (3)
{f25}ﬁ{f}	R0 =	3 (CompareDevice)
	R1 =	<FS number=>OS:fsys_ident>
	R2 =	pointer to filename
	R3 =	pointer to device or ID
	R6 =	pointer to special field
{f25}‹{f}	R0-R3 and R6 preserved
	Z set if R2, R6 point to a file on R3.
#line
This call is used to check if a file exists on a particular drive. A *fast* filing system (RAMFS) is allowed to always return Z set.
#line;tab
See also:	<PRM 2-514=>PRM-2:514>, <5a-258=>PRM-5a:258>
#
#Subpage 4
Free GetFreeSpace64 (4)
{f25}ﬁ{f}	R0 =	4 (GetFreeSpace64)
	R1 =	<FS number=>OS:fsys_ident>
	R2 =	pointer to <a 6 word buffer=>.4buffer>
	R3 =	pointer to device name or ID
{f25}‹{f}	R0 =	0
		R1 - R3 preserved, R2 <buffer=>.4buffer> updated.
#line
This is used to find the free space on a device. From RISC OS 3.6, this call is used rather than <2=>.2>. If R0 is non-zero on exit, or if an error occurs, then <reason code 2=>.2> is called. Thus your routine must give an error for both reason codes 4 and 2 before Free will believe it.
#line;tab
See also:	<PRM 5a-258=>PRM-5a:258>
#
#subpage 4buffer
Buffer contents for Free GetFreeSpace64
The format of the buffer is as follows:
#indent 1
/Offset/	/Meaning/
[0,4]	total size of device (or 0 if unchanged)
[8,12]	free space on device
[16,20]	used space on device
#indent;line;tab
The bit order for the pairs of word are:
#indent 1
/Word/	/Bits/
0	0-31
4	32-63
#indent
